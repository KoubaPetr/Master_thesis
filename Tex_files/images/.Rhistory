plot(x = age_axis[15:lifetime_threshold], y = survivals_aai_15_exp[15:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=15", type = "s", lwd = 3)
lines(x = age_axis[15:lifetime_threshold], y = survivals_aai_15_control[15:lifetime_threshold], lwd = 3, type = "s", col = "red")
# Quartic model Control
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_control_quartic), x = age_of_inf_15_axis), col = "red")
# Quartic model Exposed
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_exp_quartic), x = age_of_inf_15_axis), col = "black")
legend("bottomleft", legend = c("Data exposed", "Data control", "Quartic model control", "Quartic model exposed"), col = c("black", "red", "black", "red"), lwd = c(3,3,1,1), cex = 0.8)
str(survivals_aai_15_control[15:lifetime_threshold])
pdf("Survival_data_aai_15.pdf")
plot(x = age_axis[15:lifetime_threshold], y = survivals_aai_15_exp[15:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival[fraction]", type = "s", lwd = 3)
lines(x = age_axis[15:lifetime_threshold], y = survivals_aai_15_control[15:lifetime_threshold], lwd = 3, type = "s", col = "red")
legend("bottomleft", legend = c("Data exposed (at age 15)", "Data control (since age 15)"), col = c("black", "red"), lwd = c(3,3), cex = 0.8)
dev.off()
plot(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_control_quartic), x = age_of_inf_15_axis), col = "red", xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=15", type = "l", lwd = 3)
# Quartic model Exposed
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_exp_quartic), x = age_of_inf_15_axis), col = "black")
legend("bottomleft", legend = c("Quartic model exposed", "Quartic model control"), col = c("black", "red"), lwd = c(1,1), cex = 0.8)
## Age at infection = 30 ------------------------------------------------------------------------------
plot(x = age_axis[30:lifetime_threshold], y = survivals_aai_30_exp[30:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=30", type = "s", lwd = 3)
lines(x = age_axis[30:lifetime_threshold], y = survivals_aai_30_control[30:lifetime_threshold], lwd = 3, type = "s", col = "red")
# Quartic model Control
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_control_quartic), x = age_of_inf_30_axis), col = "red")
# Quartic model Exposed
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_quartic), x = age_of_inf_30_axis), col = "black")
legend("bottomleft", legend = c("Data exposed", "Data control", "Quartic model control", "Quartic model exposed"), col = c("black", "red", "black", "red"), lwd = c(3,3,1,1), cex = 0.8)
pdf("Survival_data_aai_30.pdf")
plot(x = age_axis[30:lifetime_threshold], y = survivals_aai_30_exp[30:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival [fraction]", type = "s", lwd = 3)
lines(x = age_axis[30:lifetime_threshold], y = survivals_aai_30_control[30:lifetime_threshold], lwd = 3, type = "s", col = "red")
legend("bottomleft", legend = c("Data exposed (at age 30)", "Data control (since age 30)"), col = c("black", "red"), lwd = c(3,3), cex = 0.8)
dev.off()
plot(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_control_quartic), x = age_of_inf_30_axis), col = "red", xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=30", type = "l", lwd = 3)
# Quartic model Exposed
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_quartic), x = age_of_inf_30_axis), col = "black")
legend("bottomleft", legend = c("Quartic model exposed", "Quartic model control"), col = c("black", "red"), lwd = c(1,1), cex = 0.8)
### Control plots ---------------------------------------------------------------------------------------------------------------------------
## AaI = 5, inf --------------------------------------------------------------------------------------------------
pdf("Fitting_delta_inf_at_age_5.pdf")
plot(x = age_axis[5:lifetime_threshold], y = survivals_aai_5_inf[5:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Infected_At_Age=5")
# Linear model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_inf_linear), x = age_of_inf_5_axis), col = "yellow")
# Quadratic model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_inf_quadratic), x = age_of_inf_5_axis), col = "green")
# Cubic model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_inf_cubic), x = age_of_inf_5_axis), col = "blue")
# Quartic model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_inf_quartic), x = age_of_inf_5_axis), col = "red")
legend(90,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## AaI = 15, inf ----------------------------------------------------------------------------------------------------
pdf("Fitting_delta_inf_at_age_15.pdf")
plot(x = age_axis[15:lifetime_threshold], y = survivals_aai_15_inf[15:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Infected_At_Age=15")
# Linear model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_linear), x = age_of_inf_15_axis), col = "yellow")
# Quadratic model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_quadratic), x = age_of_inf_15_axis), col = "green")
# Cubic model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_cubic), x = age_of_inf_15_axis), col = "blue")
# Quartic model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_quartic), x = age_of_inf_15_axis), col = "red")
legend(95,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## AaI = 30, inf ---------------------------------------------------------------------------------------------------
pdf("Fitting_delta_inf_at_age_30.pdf")
plot(x = age_axis[30:lifetime_threshold], y = survivals_aai_30_inf[30:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Infected_At_Age=30")
# Linear model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_inf_linear), x = age_of_inf_30_axis), col = "yellow")
# Quadratic model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_inf_quadratic), x = age_of_inf_30_axis), col = "green")
# Cubic model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_inf_cubic), x = age_of_inf_30_axis), col = "blue")
# Quartic model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_inf_quartic), x = age_of_inf_30_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## AaI = 5, exp -------------------------------------------------------------------------------------
pdf("Fitting_delta_exp_at_age_5.pdf")
plot(x = age_axis[5:lifetime_threshold], y = survivals_aai_5_exp[5:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=5", type = "s", lwd=2)
# Linear model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_exp_linear), x = age_of_inf_5_axis), col = "yellow")
# Quadratic model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_exp_quadratic), x = age_of_inf_5_axis), col = "green")
# Cubic model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_exp_cubic), x = age_of_inf_5_axis), col = "blue")
# Quartic model
lines(x = age_axis[5:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_exp_quartic), x = age_of_inf_5_axis), col = "red")
legend(90,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## AaI = 15, exp -------------------------------------------------------------------------------------
pdf("Fitting_delta_exp_at_age_15.pdf")
plot(x = age_axis[15:lifetime_threshold], y = survivals_aai_15_exp[15:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=15", type = "s", lwd = 2)
# Linear model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_exp_linear), x = age_of_inf_15_axis), col = "yellow")
# Quadratic model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_exp_quadratic), x = age_of_inf_15_axis), col = "green")
# Cubic model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_cubic), x = age_of_inf_15_axis), col = "blue")
# Quartic model
lines(x = age_axis[15:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_exp_quartic), x = age_of_inf_15_axis), col = "red")
legend(95,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## AaI = 30, exp---------------------------------------------------------------------------------------
pdf("Fitting_delta_exp_at_age_30.pdf")
plot(x = age_axis[30:lifetime_threshold], y = survivals_aai_30_exp[30:lifetime_threshold], xlab = "Age [Days]", ylab = "Survival_Exposed_At_Age=30", type = "s", lwd=2)
# Linear model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_linear), x = age_of_inf_30_axis), col = "yellow")
# Quadratic model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_quadratic), x = age_of_inf_30_axis), col = "green")
# Cubic model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_cubic), x = age_of_inf_30_axis), col = "blue")
# Quartic model
lines(x = age_axis[30:lifetime_threshold], y = survival_model(delta = delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_quartic), x = age_of_inf_30_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## Uninfected population -------------------------------------------------
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
## Exposed population ------------------------------------------------------
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
##TODO:check control plots and proceed with computing virulence
#### Virulence for different aai groups -----------------------------------------------------------------------------------------------------
virulence_aai_5 <- delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_inf_quadratic) - delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_exp_quartic)
virulence_aai_15 <- delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_quadratic) - delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_exp_quartic)
virulence_aai_30 <- delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_inf_quadratic) - delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_exp_quartic)
pdf("Virulences_age_of_infection_structured_same_model_for_same_infection_status.pdf")
plot(x = age_axis[1:(lifetime_threshold-4)], y = virulence_aai_5, xlab = "Age of infection [Days]", ylab = "Virulence", col = "red", type = "l")
lines(x = age_axis[1:(lifetime_threshold-14)], y = virulence_aai_15, col = "green")
lines(x = age_axis[1:(lifetime_threshold-29)], y = virulence_aai_30, col = "blue")
points(x = c(89, 78, 68), y = c(0.224, 0.095, 0.06), col = "black", pch = 20, cex = 1.3)
legend(0,0.32, bty="n", legend = c("Age at infection = 5", "Age at infection = 15", "Age at infection = 30", "Points mark the last\navailable datapoint for fitting"), col = c("red", "green", "blue", "black"), lty =c(1,1,1,NA) , pch = c(NA,NA,NA,20), cex = 0.7, pt.cex = 1.3)
text(20.2,0.17, labels = "Sample size for exposed:", cex = 0.7)
text(45,0.17, labels = "16", cex = 0.7, col = "red")
text(51,0.17, labels = "56", cex = 0.7, col = "green")
text(57,0.17, labels = "64", cex = 0.7, col = "blue")
text(20.5,0.15, labels = "Sample size for infecteds:", cex = 0.7)
text(45,0.15, labels = "97", cex = 0.7, col = "red")
text(51,0.15, labels = "27", cex = 0.7, col = 'green')
text(57,0.15, labels = "14", cex = 0.7, col = 'blue')
dev.off()
### Plot susceptibility dependence on the age at infection --------------------------------------------------
y_sus <- c(length(longevity_aai_5_inf)/(length(longevity_aai_5_inf)+length(longevity_aai_5_exp)), length(longevity_aai_15_inf)/(length(longevity_aai_15_inf)+length(longevity_aai_15_exp)), length(longevity_aai_30_inf)/(length(longevity_aai_30_inf)+length(longevity_aai_30_exp)))
x_sus <- c(5,15,30)
plot(x_sus, y_sus, xlab = "Age at infection [Days]", ylab = "Ratio of infecteds in exposed population", type = "p", pch = 20, cex = 1.5, col = "blue" )
### Plotting histograms of lifespans for different ages of infection ------------------------------------------------------------
### seriously whats up with the high death rate around the age of 40 for aai_5_inf (does it relate to the step in the survival?)
#require("plotrix")
require("weights")
#longevities
inf_lifespan_aai_5 <- (longevity_aai_5_inf - 5)
inf_lifespan_aai_15 <- (longevity_aai_15_inf - 15)
inf_lifespan_aai_30 <- (longevity_aai_30_inf - 30)
#weights
virulence_proportion_aai_inf_5_aoi <-   virulence_aai_5[1:(max(longevity_aai_5_inf)-5)] / delta(age = age_axis[5:lifetime_threshold], parameters = optimized_parameters_aai_5_inf_quadratic)[1:(max(longevity_aai_5_inf)-5)]
virulence_proportion_aai_inf_15_aoi <-  virulence_aai_15[1:(max(longevity_aai_15_inf)-15)] / delta(age = age_axis[15:lifetime_threshold], parameters = optimized_parameters_aai_15_inf_quadratic)[1:(max(longevity_aai_15_inf)-15)]
virulence_proportion_aai_inf_30_aoi <-  virulence_aai_30[1:(max(longevity_aai_30_inf)-30)] / delta(age = age_axis[30:lifetime_threshold], parameters = optimized_parameters_aai_30_inf_quadratic)[1:(max(longevity_aai_30_inf)-30)]
prepare_weights <- function(proportion, longevity, aai){
weights <- rep(0, length(longevity))
for (i in 1:length(longevity)) {
if(proportion[(longevity[i]-aai)]>0){
weights[i] <- proportion[(longevity[i]-aai)]
}else{
weights[i] <- 0
}
}
return(weights)
}
w_5 <- prepare_weights(proportion = virulence_proportion_aai_inf_5_aoi, longevity = inf_lifespan_aai_5, aai = 5)
w_15 <- prepare_weights(proportion = virulence_proportion_aai_inf_15_aoi, longevity = inf_lifespan_aai_15, aai = 15)
w_30 <- prepare_weights(proportion = virulence_proportion_aai_inf_30_aoi, longevity = inf_lifespan_aai_30, aai = 30)
length(virulence_proportion_aai_inf_30_aoi[inf_lifespan_aai_30[5]-30])
#histograms showing death distribution due too virulence only
#(significance of each death weighted by the ratio of virulence to total deathrate)
### histograms of death distributions for respective aai classes
pdf("Overall_distribution_of_deaths.pdf")
hist(inf_lifespan_aai_5, col = rgb(1,0,0,0.5), freq = FALSE, main = "Overall distribution of deaths", xlab = "Age of infection [Days]")
hist(inf_lifespan_aai_15, col = rgb(0,0,1,0.5), add = T, freq = FALSE)
hist(inf_lifespan_aai_30, col =  rgb(0,1,0,0.5), add = T, freq = FALSE)
legend("topright", bty="n", legend = c("Age at infection = 5", "Age at infection = 15", "Age at infection = 30"), col = c("red", "green", "blue"), lty =c(1,1,1) , cex = 0.9, lwd = 2)
dev.off()
pdf("Distribution_of_deaths_due_to_virulence.pdf")
wtd.hist(x = inf_lifespan_aai_5, weight = w_5, col = rgb(1,0,0,0.5), freq = FALSE, ylim = c(0,0.12), main = "Distributions of deaths due to infection", xlab = "Age of infection [days]", ylab = "Density")
wtd.hist(x = inf_lifespan_aai_15, breaks = seq(30,85, by = 5), weight = w_15, col = rgb(0,1,0,0.5), add = T, freq = FALSE)
wtd.hist(x = inf_lifespan_aai_30, breaks = seq(30,85, by = 5) , weight = w_30,col = rgb(0,0,1,0.5) , add = T, freq = FALSE)
legend(30,0.12, bty="n", legend = c("Age at infection = 5", "Age at infection = 15", "Age at infection = 30"), col = c("red", "green", "blue"), lty =c(1,1,1) , cex = 0.9, lwd = 2)
dev.off()
## Commparing the sample sizes with proper sizing when reflecting the deathrate
sample_sizes_for_aai_compartments <- c(length(longevity_aai_5_exp)+length(longevity_aai_5_inf),length(longevity_aai_15_exp)+length(longevity_aai_15_inf),length(longevity_aai_30_exp)+length(longevity_aai_30_inf))
expected_sample_sizes <- c(113, 113*sum(host_longevity_control>14)/sum(host_longevity_control>4), 113*sum(host_longevity_control>29)/sum(host_longevity_control>4))
expected_sample_sizes
#### TODO: ---------------------------------------------------------------------------------
### is the fit of aai_30_exp atisfactory?
### Pick correct compartment for the computation of the natural deathrate (wait for answer by Roland)
### Including what we have in our model
### Relation between lifespan distribution and virulence?
### Look for better test then Kolmogorov-Smirnov (wait for Rolands reply)
### Trying to fit with Weibull distribution?
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
## Uninfected population -------------------------------------------------
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
## Exposed population ------------------------------------------------------
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
## Uninfected population -------------------------------------------------
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
## Exposed population ------------------------------------------------------
plot(x = age_axis, y = survivals_exposed, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
## Exposed population ------------------------------------------------------
plot(x = age_axis, y = survivals_exposed, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
## Uninfected population -------------------------------------------------
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
pdf("uninfected_population_survival_and_fit.pdf")
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## Exposed population ------------------------------------------------------
pdf("exposed_population_survival_and_fit.pdf")
plot(x = age_axis, y = survivals_exposed, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
setwd("~/Documents/Master_thesis/Tex_files/images")
## Uninfected population -------------------------------------------------
pdf("uninfected_population_survival_and_fit.pdf")
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## Exposed population ------------------------------------------------------
pdf("exposed_population_survival_and_fit.pdf")
plot(x = age_axis, y = survivals_exposed, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
legend(100,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
pdf("uninfected_population_survival_and_fit.pdf")
plot(x = age_axis, y = survivals_uninfected, xlab = "Age [Days]", ylab = "Survival_Uninfected", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_uninfected_quartic), x = age_axis), col = "red")
legend(90,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
## Exposed population ------------------------------------------------------
pdf("exposed_population_survival_and_fit.pdf")
plot(x = age_axis, y = survivals_exposed, xlab = "Age [Days]", ylab = "Survival_Exposed", type = "s", lwd =2)
# Linear model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_linear), x = age_axis), col = "yellow")
# Quadratic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quadratic), x = age_axis), col = "green")
# Cubic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_cubic), x = age_axis), col = "blue")
# Quartic model
lines(x = age_axis, y = survival_model(delta = delta(age = age_axis, parameters = optimized_parameters_exposed_quartic), x = age_axis), col = "red")
legend(90,1, legend = c("Data", 'Linear model', "Quadratic model", "Cubic model", "4th order polynomial model"), col = c("black", "yellow", "green", "blue", "red"), lty = 1, cex = 0.8)
dev.off()
# The above Kolmogorov-Smirnov test is not completely right, since it is applied to the cummulative functions, which
# are not completely independent, better apply it to distribution of deaths
?sort()
longevity_aai_5_exp
# The above Kolmogorov-Smirnov test is not completely right, since it is applied to the cummulative functions, which
# are not completely independent, better apply it to distribution of deaths
sort(longevity_aai_5_exp)
# The above Kolmogorov-Smirnov test is not completely right, since it is applied to the cummulative functions, which
# are not completely independent, better apply it to distribution of deaths
plot(sort(longevity_aai_5_exp))
hist(longevity_aai_5_exp)
# The above Kolmogorov-Smirnov test is not completely right, since it is applied to the cummulative functions, which
# are not completely independent, better apply it to distribution of deaths
plot(sort(longevity_aai_5_exp))
table(sort(longevity_aai_5_exp))
table(sort(longevity_aai_5_exp))[names]
str(table(sort(longevity_aai_5_exp)))
str(table(sort(longevity_aai_5_exp))$chr)
str(table(sort(longevity_aai_5_exp))[1])
as.data.frame(table(sort(longevity_aai_5_exp)))
as.data.frame(table(sort(longevity_aai_5_exp)))$Freq
as.data.frame(table(sort(longevity_aai_5_exp)))$Var1
plot(as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1),as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
plot(x=as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1),y=as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1)
as.data.frame(table(sort(longevity_aai_5_exp)))$Var1
plot(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1,as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
sum(longevity_aai_5_exp == x)
sum(longevity_aai_5_exp == x)
age_axis
frequencies_deaths_exp_aai_5 <- rep(0, lifetime_threshold)
frequencies_deaths_exp_aai_15 <- rep(0, lifetime_threshold)
frequencies_deaths_exp_aai_30 <- rep(0, lifetime_threshold)
frequencies_deaths_control_aai_5 <- rep(0, lifetime_threshold)
frequencies_deaths_control_aai_15 <- rep(0, lifetime_threshold)
frequencies_deaths_control_aai_30 <- rep(0, lifetime_threshold)
for(i in 1:lifetime_threshold){
frequencies_deaths_exp_aai_5[i] <- sum(longevity_aai_5_exp == i)
frequencies_deaths_exp_aai_15[i] <- sum(longevity_aai_15_exp == i)
frequencies_deaths_exp_aai_30[i] <- sum(longevity_aai_30_exp == i)
frequencies_deaths_control_aai_5[i] <- sum(longevity_aai_5_control == i)
frequencies_deaths_control_aai_15[i] <- sum(longevity_aai_15_control == i)
frequencies_deaths_control_aai_30[i] <- sum(longevity_aai_30_control == i)
}
frequencies_deaths_exp_aai_5 <- rep(0, lifetime_threshold)
frequencies_deaths_exp_aai_15 <- rep(0, lifetime_threshold)
frequencies_deaths_exp_aai_30 <- rep(0, lifetime_threshold)
frequencies_deaths_control_aai_5 <- rep(0, lifetime_threshold)
frequencies_deaths_control_aai_15 <- rep(0, lifetime_threshold)
frequencies_deaths_control_aai_30 <- rep(0, lifetime_threshold)
for(i in 5:lifetime_threshold){
frequencies_deaths_exp_aai_5[i] <- sum(longevity_aai_5_exp == i)
frequencies_deaths_control_aai_5[i] <- sum(host_longevity_control == i)
}
for(i in 15:lifetime_threshold){
frequencies_deaths_exp_aai_15[i] <- sum(longevity_aai_15_exp == i)
frequencies_deaths_control_aai_15[i] <- sum(host_longevity_control == i)
}
for(i in 30:lifetime_threshold){
frequencies_deaths_exp_aai_30[i] <- sum(longevity_aai_30_exp == i)
frequencies_deaths_control_aai_30[i] <- sum(host_longevity_control == i)
}
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5)
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5)
str(age_of_inf_5_axis)
# are not completely independent, better apply it to distribution of deaths
# plot(as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1),as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
# plot(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1,as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
frequencies_deaths_exp_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_exp_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_exp_aai_30 <- rep(0, (lifetime_threshold-29))
frequencies_deaths_control_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_control_aai_15 <- rep(0, lifetime_threshold-14))
frequencies_deaths_control_aai_30 <- rep(0, lifetime_threshold-29))
frequencies_deaths_exp_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_exp_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_exp_aai_30 <- rep(0, (lifetime_threshold-29))
frequencies_deaths_control_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_control_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_control_aai_30 <- rep(0, (lifetime_threshold-29))
for(i in 5:lifetime_threshold){
frequencies_deaths_exp_aai_5[i] <- sum(longevity_aai_5_exp == i)
frequencies_deaths_control_aai_5[i] <- sum(host_longevity_control == i)
}
for(i in 15:lifetime_threshold){
frequencies_deaths_exp_aai_15[i] <- sum(longevity_aai_15_exp == i)
frequencies_deaths_control_aai_15[i] <- sum(host_longevity_control == i)
}
for(i in 30:lifetime_threshold){
frequencies_deaths_exp_aai_30[i] <- sum(longevity_aai_30_exp == i)
frequencies_deaths_control_aai_30[i] <- sum(host_longevity_control == i)
}
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5)
length(age_of_inf_5_axis)
length(frequencies_deaths_exp_aai_5)
frequencies_deaths_exp_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_exp_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_exp_aai_30 <- rep(0, (lifetime_threshold-29))
frequencies_deaths_control_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_control_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_control_aai_30 <- rep(0, (lifetime_threshold-29))
length(frequencies_deaths_exp_aai_5)
# are not completely independent, better apply it to distribution of deaths
# plot(as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1),as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
# plot(as.data.frame(table(sort(longevity_aai_5_exp)))$Var1,as.numeric(as.data.frame(table(sort(longevity_aai_5_exp)))$Freq))
frequencies_deaths_exp_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_exp_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_exp_aai_30 <- rep(0, (lifetime_threshold-29))
frequencies_deaths_control_aai_5 <- rep(0, (lifetime_threshold-4))
frequencies_deaths_control_aai_15 <- rep(0, (lifetime_threshold-14))
frequencies_deaths_control_aai_30 <- rep(0, (lifetime_threshold-29))
for(i in 5:lifetime_threshold){
frequencies_deaths_exp_aai_5[i-4] <- sum(longevity_aai_5_exp == i)
frequencies_deaths_control_aai_5[i-4] <- sum(host_longevity_control == i)
}
for(i in 15:lifetime_threshold){
frequencies_deaths_exp_aai_15[i-14] <- sum(longevity_aai_15_exp == i)
frequencies_deaths_control_aai_15[i-14] <- sum(host_longevity_control == i)
}
for(i in 30:lifetime_threshold){
frequencies_deaths_exp_aai_30[i-29] <- sum(longevity_aai_30_exp == i)
frequencies_deaths_control_aai_30[i-29] <- sum(host_longevity_control == i)
}
length(age_of_inf_5_axis)
length(frequencies_deaths_exp_aai_5)
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5)
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5, col = "blue")
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5, col = "blue", type = 'triangle')
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5, col = "blue", type = 'dot')
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5, col = "blue", char = "point")
lines(age_of_inf_5_axis, frequencies_deaths_control_aai_5, col = "red")
lines(age_of_inf_5_axis, frequencies_deaths_control_aai_5, col = "red", type = "p")
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5, col = "blue")
lines(age_of_inf_5_axis, frequencies_deaths_control_aai_5, col = "red", type = "p")
plot(age_of_inf_15_axis, frequencies_deaths_exp_aai_15, col = "blue")
lines(age_of_inf_15_axis, frequencies_deaths_control_aai_15, col = "red", type = "p")
frequencies_deaths_exp_aai_5 <- frequencies_deaths_exp_aai_5/sum(frequencies_deaths_exp_aai_5)
frequencies_deaths_exp_aai_15 <- frequencies_deaths_exp_aai_15/sum(frequencies_deaths_exp_aai_15)
frequencies_deaths_exp_aai_30 <- frequencies_deaths_exp_aai_30/sum(frequencies_deaths_exp_aai_30)
frequencies_deaths_control_aai_5 <- frequencies_deaths_control_aai_5/sum(frequencies_deaths_control_aai_5)
frequencies_deaths_control_aai_15 <- frequencies_deaths_control_aai_15/sum(frequencies_deaths_control_aai_15)
frequencies_deaths_control_aai_30 <- frequencies_deaths_control_aai_30/sum(frequencies_deaths_control_aai_30)
plot(age_of_inf_5_axis, frequencies_deaths_exp_aai_5, col = "blue")
lines(age_of_inf_5_axis, frequencies_deaths_control_aai_5, col = "red", type = "p")
plot(age_of_inf_15_axis, frequencies_deaths_exp_aai_15, col = "blue")
lines(age_of_inf_15_axis, frequencies_deaths_control_aai_15, col = "red", type = "p")
plot(age_of_inf_15_axis+15, frequencies_deaths_exp_aai_15, col = "blue")
lines(age_of_inf_15_axis+15, frequencies_deaths_control_aai_15, col = "red", type = "p")
plot(age_of_inf_5_axis+5, frequencies_deaths_exp_aai_5, col = "blue")
lines(age_of_inf_5_axis+5, frequencies_deaths_control_aai_5, col = "red", type = "p")
plot(age_of_inf_30_axis+30, frequencies_deaths_exp_aai_30, col = "blue")
lines(age_of_inf_30_axis+30, frequencies_deaths_control_aai_30, col = "red", type = "p")
### plotting histograms of lifetimes --------------------------------------------------------------
hist(longevity_aai_5_exp)
install.packages("ggplot2")
hist(longevity_aai_5_exp, freq = FALSE)
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add="T")
hist(longevity_aai_5_exp, freq = FALSE)
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add="T")
hist(longevity_aai_5_exp, freq = FALSE, col = "blue")
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = "red")
hist(longevity_aai_5_exp, freq = FALSE, col = rgb(0.5,0,0,1))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,0,0.5,1))
hist(longevity_aai_5_exp, freq = FALSE, col = rgb(1,0,0,0.5))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,0,1,0.5))
hist(longevity_aai_5_exp, freq = FALSE, col = rgb(1,0,0,0.5))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,1,0,0.5))
hist(longevity_aai_5_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,1,0,0.5))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,1,0,0.7))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,1,0,0.4))
hist(longevity_aai_5_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,1,0,0.4))
hist(longevity_aai_5_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>5], freq = FALSE, add=T, col = rgb(0,1,0,0.6))
hist(longevity_aai_15_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>15], freq = FALSE, add=T, col = rgb(0,1,0,0.6))
hist(longevity_aai_30_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>30], freq = FALSE, add=T, col = rgb(0,1,0,0.6))
hist(longevity_aai_30_exp, freq = FALSE, col = rgb(1,0,0,0.7))$counts
hist(longevity_aai_30_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>30], freq = FALSE, add=T, col = rgb(0,1,0,0.6))
hist(host_longevity_control[host_longevity_control>30], freq = FALSE, add=T, col = rgb(0,1,0,0.6))$counts
hist(longevity_aai_30_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>30], freq = FALSE, add=T, col = rgb(0,1,0,0.6))
hist(longevity_aai_15_exp, freq = FALSE, col = rgb(1,0,0,0.7))
hist(host_longevity_control[host_longevity_control>15], freq = FALSE, add=T, col = rgb(0,1,0,0.6))
